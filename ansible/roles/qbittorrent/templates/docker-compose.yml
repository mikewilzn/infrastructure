version: "{{ docker_compose_version }}"

services:
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:libtorrentv1
    restart: unless-stopped
    network_mode: "container:gluetun"
    environment:
      - "PUID={{ service_user.uid }}"
      - "PGID={{ media_gid }}"
      - "TZ={{ timezone }}"
      - "UMASK=002"
      #- DOCKER_MODS=arafatamim/linuxserver-io-mod-vuetorrent
    volumes:
      - "{{ data_dir }}/{{ role_name }}:/config"
      - "{{ media_storage_mnt }}/data/torrents:/data/torrents"
    labels:
      traefik.enable: true
      traefik.http.routers.{{ role_name }}.rule: "Host(`{{ role_name }}.local.{{ personal_domain }}`)"
      traefik.http.routers.{{ role_name }}.middlewares: lan-whitelist@file
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8080

  qbitmanage:
    container_name: qbitmanage
    image: cr.hotio.dev/hotio/qbitmanage
    restart: unless-stopped
    environment:
      PUID: "{{ service_user.uid }}"
      PGID: "{{ service_user.uid }}"
      UMASK: 002
      TZ: "{{ timezone }}"
      QBT_DRY_RUN: "False"
      QBT_SCHEDULE: 720
      QBT_RECHECK: "True"
      QBT_TAG_UPDATE: "True"
      QBT_REM_UNREGISTERED: "True"
      QBT_REMOVE_ORPHANED: "True"
      QBT_TAG_NOHARDLINKS: "True"

    volumes:
      - "{{ data_dir }}/qbitmanage:/config"
      - "{{ media_storage_mnt }}/data/torrents:/data/torrents" # root_dir
      - "{{ data_dir }}/qbittorrent/qBittorrent/BT_backup:/torrents" # torrents_dir

  cross-seed:
    container_name: cross-seed
    depends_on:
      - qbittorrent
    image: crossseed/cross-seed
    user: "{{ service_user.uid }}:{{ service_user.uid }}"
    volumes:
      - "{{ data_dir }}/cross-seed:/config"
      - "{{ data_dir }}/qbittorrent/qBittorrent/BT_backup:/torrents"
      - "{{ data_dir }}/cross-seed/output:/cross-seeds"
    command: daemon
    restart: unless-stopped
